// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: proto/follow_service.proto
// Original file comments:
//
// Copyright (c) 2025 Neo Qiss
// All rights reserved.
// 
// This software is proprietary and confidential.
// Unauthorized copying, distribution, or use is strictly prohibited.
//
#ifndef GRPC_proto_2ffollow_5fservice_2eproto__INCLUDED
#define GRPC_proto_2ffollow_5fservice_2eproto__INCLUDED

#include "proto/follow_service.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace sonet {
namespace follow {
namespace v1 {

// ========== FOLLOW SERVICE DEFINITION ==========
//
// *
// Twitter-Scale Follow Service
// 
// High-performance gRPC service for social graph operations:
// - Sub-1ms follow/unfollow operations
// - Real-time relationship queries
// - Advanced recommendations
// - Comprehensive analytics
// - Bulk operations for efficiency
class FollowService final {
 public:
  static constexpr char const* service_full_name() {
    return "sonet.follow.v1.FollowService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Follow a user
    virtual ::grpc::Status FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::sonet::follow::v1::FollowUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>> AsyncFollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>>(AsyncFollowUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>> PrepareAsyncFollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>>(PrepareAsyncFollowUserRaw(context, request, cq));
    }
    // Unfollow a user
    virtual ::grpc::Status UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::sonet::follow::v1::UnfollowUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>> AsyncUnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>>(AsyncUnfollowUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>> PrepareAsyncUnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>>(PrepareAsyncUnfollowUserRaw(context, request, cq));
    }
    // Block a user
    virtual ::grpc::Status BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::sonet::follow::v1::BlockUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>> AsyncBlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>>(AsyncBlockUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>> PrepareAsyncBlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>>(PrepareAsyncBlockUserRaw(context, request, cq));
    }
    // Unblock a user
    virtual ::grpc::Status UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::sonet::follow::v1::UnblockUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>> AsyncUnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>>(AsyncUnblockUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>> PrepareAsyncUnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>>(PrepareAsyncUnblockUserRaw(context, request, cq));
    }
    // Mute a user
    virtual ::grpc::Status MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::sonet::follow::v1::MuteUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>> AsyncMuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>>(AsyncMuteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>> PrepareAsyncMuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>>(PrepareAsyncMuteUserRaw(context, request, cq));
    }
    // Unmute a user
    virtual ::grpc::Status UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::sonet::follow::v1::UnmuteUserResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>> AsyncUnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>>(AsyncUnmuteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>> PrepareAsyncUnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>>(PrepareAsyncUnmuteUserRaw(context, request, cq));
    }
    // ========== RELATIONSHIP QUERIES ==========
    //
    // Get relationship between two users
    virtual ::grpc::Status GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::sonet::follow::v1::GetRelationshipResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>> AsyncGetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>>(AsyncGetRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>> PrepareAsyncGetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>>(PrepareAsyncGetRelationshipRaw(context, request, cq));
    }
    // Check specific relationship type
    virtual ::grpc::Status CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::sonet::follow::v1::CheckRelationshipResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>> AsyncCheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>>(AsyncCheckRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>> PrepareAsyncCheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>>(PrepareAsyncCheckRelationshipRaw(context, request, cq));
    }
    // Get relationships with multiple users
    virtual ::grpc::Status GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>> AsyncGetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>>(AsyncGetBulkRelationshipsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>> PrepareAsyncGetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>>(PrepareAsyncGetBulkRelationshipsRaw(context, request, cq));
    }
    // ========== LISTS ==========
    //
    // Get user's followers
    virtual ::grpc::Status GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::sonet::follow::v1::GetFollowersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>> AsyncGetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>>(AsyncGetFollowersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>> PrepareAsyncGetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>>(PrepareAsyncGetFollowersRaw(context, request, cq));
    }
    // Get users that a user is following
    virtual ::grpc::Status GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::sonet::follow::v1::GetFollowingResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>> AsyncGetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>>(AsyncGetFollowingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>> PrepareAsyncGetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>>(PrepareAsyncGetFollowingRaw(context, request, cq));
    }
    // Get mutual friends between two users
    virtual ::grpc::Status GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::sonet::follow::v1::GetMutualFriendsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>> AsyncGetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>>(AsyncGetMutualFriendsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>> PrepareAsyncGetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>>(PrepareAsyncGetMutualFriendsRaw(context, request, cq));
    }
    // ========== BULK OPERATIONS ==========
    //
    // Follow multiple users
    virtual ::grpc::Status BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::sonet::follow::v1::BulkFollowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>> AsyncBulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>>(AsyncBulkFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>> PrepareAsyncBulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>>(PrepareAsyncBulkFollowRaw(context, request, cq));
    }
    // Unfollow multiple users
    virtual ::grpc::Status BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::sonet::follow::v1::BulkFollowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>> AsyncBulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>>(AsyncBulkUnfollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>> PrepareAsyncBulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>>(PrepareAsyncBulkUnfollowRaw(context, request, cq));
    }
    // ========== RECOMMENDATIONS ==========
    //
    // Get friend recommendations
    virtual ::grpc::Status GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::sonet::follow::v1::GetRecommendationsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>> AsyncGetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>>(AsyncGetRecommendationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>> PrepareAsyncGetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>>(PrepareAsyncGetRecommendationsRaw(context, request, cq));
    }
    // Get trending users
    virtual ::grpc::Status GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::sonet::follow::v1::GetTrendingUsersResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>> AsyncGetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>>(AsyncGetTrendingUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>> PrepareAsyncGetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>>(PrepareAsyncGetTrendingUsersRaw(context, request, cq));
    }
    // ========== ANALYTICS ==========
    //
    // Get follower analytics
    virtual ::grpc::Status GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>> AsyncGetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>>(AsyncGetFollowerAnalyticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>> PrepareAsyncGetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>>(PrepareAsyncGetFollowerAnalyticsRaw(context, request, cq));
    }
    // Get social metrics
    virtual ::grpc::Status GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::sonet::follow::v1::GetSocialMetricsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>> AsyncGetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>>(AsyncGetSocialMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>> PrepareAsyncGetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>>(PrepareAsyncGetSocialMetricsRaw(context, request, cq));
    }
    // ========== REAL-TIME ==========
    //
    // Get live follower count
    virtual ::grpc::Status GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>> AsyncGetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>>(AsyncGetLiveFollowerCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>> PrepareAsyncGetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>>(PrepareAsyncGetLiveFollowerCountRaw(context, request, cq));
    }
    // Get recent activity
    virtual ::grpc::Status GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::sonet::follow::v1::GetRecentActivityResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>> AsyncGetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>>(AsyncGetRecentActivityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>> PrepareAsyncGetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>>(PrepareAsyncGetRecentActivityRaw(context, request, cq));
    }
    // Stream follower updates
    std::unique_ptr< ::grpc::ClientReaderInterface< ::sonet::follow::v1::FollowActivity>> StreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::sonet::follow::v1::FollowActivity>>(StreamFollowerUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>> AsyncStreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>>(AsyncStreamFollowerUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>> PrepareAsyncStreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>>(PrepareAsyncStreamFollowerUpdatesRaw(context, request, cq));
    }
    // ========== VALIDATION ==========
    //
    // Validate follow request
    virtual ::grpc::Status ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::sonet::follow::v1::ValidateFollowResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>> AsyncValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>>(AsyncValidateFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>> PrepareAsyncValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>>(PrepareAsyncValidateFollowRaw(context, request, cq));
    }
    // Check rate limits
    virtual ::grpc::Status CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::sonet::follow::v1::CheckRateLimitResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>> AsyncCheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>>(AsyncCheckRateLimitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>> PrepareAsyncCheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>>(PrepareAsyncCheckRateLimitRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Follow a user
      virtual void FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Unfollow a user
      virtual void UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Block a user
      virtual void BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Unblock a user
      virtual void UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Mute a user
      virtual void MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Unmute a user
      virtual void UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== RELATIONSHIP QUERIES ==========
      //
      // Get relationship between two users
      virtual void GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Check specific relationship type
      virtual void CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get relationships with multiple users
      virtual void GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== LISTS ==========
      //
      // Get user's followers
      virtual void GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get users that a user is following
      virtual void GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get mutual friends between two users
      virtual void GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== BULK OPERATIONS ==========
      //
      // Follow multiple users
      virtual void BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Unfollow multiple users
      virtual void BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== RECOMMENDATIONS ==========
      //
      // Get friend recommendations
      virtual void GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get trending users
      virtual void GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== ANALYTICS ==========
      //
      // Get follower analytics
      virtual void GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get social metrics
      virtual void GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // ========== REAL-TIME ==========
      //
      // Get live follower count
      virtual void GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Get recent activity
      virtual void GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Stream follower updates
      virtual void StreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::grpc::ClientReadReactor< ::sonet::follow::v1::FollowActivity>* reactor) = 0;
      // ========== VALIDATION ==========
      //
      // Validate follow request
      virtual void ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Check rate limits
      virtual void CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>* AsyncFollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::FollowUserResponse>* PrepareAsyncFollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>* AsyncUnfollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnfollowUserResponse>* PrepareAsyncUnfollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>* AsyncBlockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BlockUserResponse>* PrepareAsyncBlockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>* AsyncUnblockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnblockUserResponse>* PrepareAsyncUnblockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>* AsyncMuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::MuteUserResponse>* PrepareAsyncMuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>* AsyncUnmuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::UnmuteUserResponse>* PrepareAsyncUnmuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>* AsyncGetRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRelationshipResponse>* PrepareAsyncGetRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>* AsyncCheckRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRelationshipResponse>* PrepareAsyncCheckRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>* AsyncGetBulkRelationshipsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetBulkRelationshipsResponse>* PrepareAsyncGetBulkRelationshipsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>* AsyncGetFollowersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowersResponse>* PrepareAsyncGetFollowersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>* AsyncGetFollowingRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowingResponse>* PrepareAsyncGetFollowingRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>* AsyncGetMutualFriendsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetMutualFriendsResponse>* PrepareAsyncGetMutualFriendsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>* AsyncBulkFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>* PrepareAsyncBulkFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>* AsyncBulkUnfollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::BulkFollowResponse>* PrepareAsyncBulkUnfollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>* AsyncGetRecommendationsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecommendationsResponse>* PrepareAsyncGetRecommendationsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>* AsyncGetTrendingUsersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetTrendingUsersResponse>* PrepareAsyncGetTrendingUsersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>* AsyncGetFollowerAnalyticsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetFollowerAnalyticsResponse>* PrepareAsyncGetFollowerAnalyticsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>* AsyncGetSocialMetricsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetSocialMetricsResponse>* PrepareAsyncGetSocialMetricsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>* AsyncGetLiveFollowerCountRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetLiveFollowerCountResponse>* PrepareAsyncGetLiveFollowerCountRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>* AsyncGetRecentActivityRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::GetRecentActivityResponse>* PrepareAsyncGetRecentActivityRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::sonet::follow::v1::FollowActivity>* StreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>* AsyncStreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::sonet::follow::v1::FollowActivity>* PrepareAsyncStreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>* AsyncValidateFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::ValidateFollowResponse>* PrepareAsyncValidateFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>* AsyncCheckRateLimitRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::sonet::follow::v1::CheckRateLimitResponse>* PrepareAsyncCheckRateLimitRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::sonet::follow::v1::FollowUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>> AsyncFollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>>(AsyncFollowUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>> PrepareAsyncFollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>>(PrepareAsyncFollowUserRaw(context, request, cq));
    }
    ::grpc::Status UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::sonet::follow::v1::UnfollowUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>> AsyncUnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>>(AsyncUnfollowUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>> PrepareAsyncUnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>>(PrepareAsyncUnfollowUserRaw(context, request, cq));
    }
    ::grpc::Status BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::sonet::follow::v1::BlockUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>> AsyncBlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>>(AsyncBlockUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>> PrepareAsyncBlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>>(PrepareAsyncBlockUserRaw(context, request, cq));
    }
    ::grpc::Status UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::sonet::follow::v1::UnblockUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>> AsyncUnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>>(AsyncUnblockUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>> PrepareAsyncUnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>>(PrepareAsyncUnblockUserRaw(context, request, cq));
    }
    ::grpc::Status MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::sonet::follow::v1::MuteUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>> AsyncMuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>>(AsyncMuteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>> PrepareAsyncMuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>>(PrepareAsyncMuteUserRaw(context, request, cq));
    }
    ::grpc::Status UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::sonet::follow::v1::UnmuteUserResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>> AsyncUnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>>(AsyncUnmuteUserRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>> PrepareAsyncUnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>>(PrepareAsyncUnmuteUserRaw(context, request, cq));
    }
    ::grpc::Status GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::sonet::follow::v1::GetRelationshipResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>> AsyncGetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>>(AsyncGetRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>> PrepareAsyncGetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>>(PrepareAsyncGetRelationshipRaw(context, request, cq));
    }
    ::grpc::Status CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::sonet::follow::v1::CheckRelationshipResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>> AsyncCheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>>(AsyncCheckRelationshipRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>> PrepareAsyncCheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>>(PrepareAsyncCheckRelationshipRaw(context, request, cq));
    }
    ::grpc::Status GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>> AsyncGetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>>(AsyncGetBulkRelationshipsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>> PrepareAsyncGetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>>(PrepareAsyncGetBulkRelationshipsRaw(context, request, cq));
    }
    ::grpc::Status GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::sonet::follow::v1::GetFollowersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>> AsyncGetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>>(AsyncGetFollowersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>> PrepareAsyncGetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>>(PrepareAsyncGetFollowersRaw(context, request, cq));
    }
    ::grpc::Status GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::sonet::follow::v1::GetFollowingResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>> AsyncGetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>>(AsyncGetFollowingRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>> PrepareAsyncGetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>>(PrepareAsyncGetFollowingRaw(context, request, cq));
    }
    ::grpc::Status GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::sonet::follow::v1::GetMutualFriendsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>> AsyncGetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>>(AsyncGetMutualFriendsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>> PrepareAsyncGetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>>(PrepareAsyncGetMutualFriendsRaw(context, request, cq));
    }
    ::grpc::Status BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::sonet::follow::v1::BulkFollowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>> AsyncBulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>>(AsyncBulkFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>> PrepareAsyncBulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>>(PrepareAsyncBulkFollowRaw(context, request, cq));
    }
    ::grpc::Status BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::sonet::follow::v1::BulkFollowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>> AsyncBulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>>(AsyncBulkUnfollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>> PrepareAsyncBulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>>(PrepareAsyncBulkUnfollowRaw(context, request, cq));
    }
    ::grpc::Status GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::sonet::follow::v1::GetRecommendationsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>> AsyncGetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>>(AsyncGetRecommendationsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>> PrepareAsyncGetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>>(PrepareAsyncGetRecommendationsRaw(context, request, cq));
    }
    ::grpc::Status GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::sonet::follow::v1::GetTrendingUsersResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>> AsyncGetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>>(AsyncGetTrendingUsersRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>> PrepareAsyncGetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>>(PrepareAsyncGetTrendingUsersRaw(context, request, cq));
    }
    ::grpc::Status GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>> AsyncGetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>>(AsyncGetFollowerAnalyticsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>> PrepareAsyncGetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>>(PrepareAsyncGetFollowerAnalyticsRaw(context, request, cq));
    }
    ::grpc::Status GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::sonet::follow::v1::GetSocialMetricsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>> AsyncGetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>>(AsyncGetSocialMetricsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>> PrepareAsyncGetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>>(PrepareAsyncGetSocialMetricsRaw(context, request, cq));
    }
    ::grpc::Status GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>> AsyncGetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>>(AsyncGetLiveFollowerCountRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>> PrepareAsyncGetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>>(PrepareAsyncGetLiveFollowerCountRaw(context, request, cq));
    }
    ::grpc::Status GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::sonet::follow::v1::GetRecentActivityResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>> AsyncGetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>>(AsyncGetRecentActivityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>> PrepareAsyncGetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>>(PrepareAsyncGetRecentActivityRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::sonet::follow::v1::FollowActivity>> StreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::sonet::follow::v1::FollowActivity>>(StreamFollowerUpdatesRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>> AsyncStreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>>(AsyncStreamFollowerUpdatesRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>> PrepareAsyncStreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>>(PrepareAsyncStreamFollowerUpdatesRaw(context, request, cq));
    }
    ::grpc::Status ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::sonet::follow::v1::ValidateFollowResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>> AsyncValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>>(AsyncValidateFollowRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>> PrepareAsyncValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>>(PrepareAsyncValidateFollowRaw(context, request, cq));
    }
    ::grpc::Status CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::sonet::follow::v1::CheckRateLimitResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>> AsyncCheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>>(AsyncCheckRateLimitRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>> PrepareAsyncCheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>>(PrepareAsyncCheckRateLimitRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response, std::function<void(::grpc::Status)>) override;
      void FollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UnfollowUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response, std::function<void(::grpc::Status)>) override;
      void BlockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UnblockUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response, std::function<void(::grpc::Status)>) override;
      void MuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response, std::function<void(::grpc::Status)>) override;
      void UnmuteUser(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckRelationship(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetBulkRelationships(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFollowers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFollowing(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetMutualFriends(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, std::function<void(::grpc::Status)>) override;
      void BulkFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, std::function<void(::grpc::Status)>) override;
      void BulkUnfollow(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRecommendations(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response, std::function<void(::grpc::Status)>) override;
      void GetTrendingUsers(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetFollowerAnalytics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetSocialMetrics(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response, std::function<void(::grpc::Status)>) override;
      void GetLiveFollowerCount(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response, std::function<void(::grpc::Status)>) override;
      void GetRecentActivity(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void StreamFollowerUpdates(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::grpc::ClientReadReactor< ::sonet::follow::v1::FollowActivity>* reactor) override;
      void ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateFollow(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response, std::function<void(::grpc::Status)>) override;
      void CheckRateLimit(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>* AsyncFollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::FollowUserResponse>* PrepareAsyncFollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::FollowUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>* AsyncUnfollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnfollowUserResponse>* PrepareAsyncUnfollowUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnfollowUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>* AsyncBlockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BlockUserResponse>* PrepareAsyncBlockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BlockUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>* AsyncUnblockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnblockUserResponse>* PrepareAsyncUnblockUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnblockUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>* AsyncMuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::MuteUserResponse>* PrepareAsyncMuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::MuteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>* AsyncUnmuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::UnmuteUserResponse>* PrepareAsyncUnmuteUserRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::UnmuteUserRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>* AsyncGetRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRelationshipResponse>* PrepareAsyncGetRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>* AsyncCheckRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRelationshipResponse>* PrepareAsyncCheckRelationshipRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRelationshipRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>* AsyncGetBulkRelationshipsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetBulkRelationshipsResponse>* PrepareAsyncGetBulkRelationshipsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>* AsyncGetFollowersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowersResponse>* PrepareAsyncGetFollowersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>* AsyncGetFollowingRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowingResponse>* PrepareAsyncGetFollowingRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowingRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>* AsyncGetMutualFriendsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetMutualFriendsResponse>* PrepareAsyncGetMutualFriendsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>* AsyncBulkFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>* PrepareAsyncBulkFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>* AsyncBulkUnfollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::BulkFollowResponse>* PrepareAsyncBulkUnfollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::BulkFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>* AsyncGetRecommendationsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecommendationsResponse>* PrepareAsyncGetRecommendationsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecommendationsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>* AsyncGetTrendingUsersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetTrendingUsersResponse>* PrepareAsyncGetTrendingUsersRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>* AsyncGetFollowerAnalyticsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetFollowerAnalyticsResponse>* PrepareAsyncGetFollowerAnalyticsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>* AsyncGetSocialMetricsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetSocialMetricsResponse>* PrepareAsyncGetSocialMetricsRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>* AsyncGetLiveFollowerCountRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetLiveFollowerCountResponse>* PrepareAsyncGetLiveFollowerCountRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>* AsyncGetRecentActivityRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::GetRecentActivityResponse>* PrepareAsyncGetRecentActivityRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetRecentActivityRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::sonet::follow::v1::FollowActivity>* StreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request) override;
    ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>* AsyncStreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::sonet::follow::v1::FollowActivity>* PrepareAsyncStreamFollowerUpdatesRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>* AsyncValidateFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::ValidateFollowResponse>* PrepareAsyncValidateFollowRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::ValidateFollowRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>* AsyncCheckRateLimitRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::sonet::follow::v1::CheckRateLimitResponse>* PrepareAsyncCheckRateLimitRaw(::grpc::ClientContext* context, const ::sonet::follow::v1::CheckRateLimitRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_FollowUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UnfollowUser_;
    const ::grpc::internal::RpcMethod rpcmethod_BlockUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UnblockUser_;
    const ::grpc::internal::RpcMethod rpcmethod_MuteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_UnmuteUser_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRelationship_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckRelationship_;
    const ::grpc::internal::RpcMethod rpcmethod_GetBulkRelationships_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFollowers_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFollowing_;
    const ::grpc::internal::RpcMethod rpcmethod_GetMutualFriends_;
    const ::grpc::internal::RpcMethod rpcmethod_BulkFollow_;
    const ::grpc::internal::RpcMethod rpcmethod_BulkUnfollow_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecommendations_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTrendingUsers_;
    const ::grpc::internal::RpcMethod rpcmethod_GetFollowerAnalytics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSocialMetrics_;
    const ::grpc::internal::RpcMethod rpcmethod_GetLiveFollowerCount_;
    const ::grpc::internal::RpcMethod rpcmethod_GetRecentActivity_;
    const ::grpc::internal::RpcMethod rpcmethod_StreamFollowerUpdates_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateFollow_;
    const ::grpc::internal::RpcMethod rpcmethod_CheckRateLimit_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Follow a user
    virtual ::grpc::Status FollowUser(::grpc::ServerContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response);
    // Unfollow a user
    virtual ::grpc::Status UnfollowUser(::grpc::ServerContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response);
    // Block a user
    virtual ::grpc::Status BlockUser(::grpc::ServerContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response);
    // Unblock a user
    virtual ::grpc::Status UnblockUser(::grpc::ServerContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response);
    // Mute a user
    virtual ::grpc::Status MuteUser(::grpc::ServerContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response);
    // Unmute a user
    virtual ::grpc::Status UnmuteUser(::grpc::ServerContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response);
    // ========== RELATIONSHIP QUERIES ==========
    //
    // Get relationship between two users
    virtual ::grpc::Status GetRelationship(::grpc::ServerContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response);
    // Check specific relationship type
    virtual ::grpc::Status CheckRelationship(::grpc::ServerContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response);
    // Get relationships with multiple users
    virtual ::grpc::Status GetBulkRelationships(::grpc::ServerContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response);
    // ========== LISTS ==========
    //
    // Get user's followers
    virtual ::grpc::Status GetFollowers(::grpc::ServerContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response);
    // Get users that a user is following
    virtual ::grpc::Status GetFollowing(::grpc::ServerContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response);
    // Get mutual friends between two users
    virtual ::grpc::Status GetMutualFriends(::grpc::ServerContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response);
    // ========== BULK OPERATIONS ==========
    //
    // Follow multiple users
    virtual ::grpc::Status BulkFollow(::grpc::ServerContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response);
    // Unfollow multiple users
    virtual ::grpc::Status BulkUnfollow(::grpc::ServerContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response);
    // ========== RECOMMENDATIONS ==========
    //
    // Get friend recommendations
    virtual ::grpc::Status GetRecommendations(::grpc::ServerContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response);
    // Get trending users
    virtual ::grpc::Status GetTrendingUsers(::grpc::ServerContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response);
    // ========== ANALYTICS ==========
    //
    // Get follower analytics
    virtual ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response);
    // Get social metrics
    virtual ::grpc::Status GetSocialMetrics(::grpc::ServerContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response);
    // ========== REAL-TIME ==========
    //
    // Get live follower count
    virtual ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response);
    // Get recent activity
    virtual ::grpc::Status GetRecentActivity(::grpc::ServerContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response);
    // Stream follower updates
    virtual ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* writer);
    // ========== VALIDATION ==========
    //
    // Validate follow request
    virtual ::grpc::Status ValidateFollow(::grpc::ServerContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response);
    // Check rate limits
    virtual ::grpc::Status CheckRateLimit(::grpc::ServerContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_FollowUser() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFollowUser(::grpc::ServerContext* context, ::sonet::follow::v1::FollowUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::FollowUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnfollowUser(::grpc::ServerContext* context, ::sonet::follow::v1::UnfollowUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::UnfollowUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BlockUser() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBlockUser(::grpc::ServerContext* context, ::sonet::follow::v1::BlockUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::BlockUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnblockUser() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnblockUser(::grpc::ServerContext* context, ::sonet::follow::v1::UnblockUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::UnblockUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_MuteUser() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMuteUser(::grpc::ServerContext* context, ::sonet::follow::v1::MuteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::MuteUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnmuteUser(::grpc::ServerContext* context, ::sonet::follow::v1::UnmuteUserRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::UnmuteUserResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRelationship() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationship(::grpc::ServerContext* context, ::sonet::follow::v1::GetRelationshipRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetRelationshipResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckRelationship(::grpc::ServerContext* context, ::sonet::follow::v1::CheckRelationshipRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::CheckRelationshipResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkRelationships(::grpc::ServerContext* context, ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetBulkRelationshipsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFollowers() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowers(::grpc::ServerContext* context, ::sonet::follow::v1::GetFollowersRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetFollowersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFollowing() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowing(::grpc::ServerContext* context, ::sonet::follow::v1::GetFollowingRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetFollowingResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMutualFriends(::grpc::ServerContext* context, ::sonet::follow::v1::GetMutualFriendsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetMutualFriendsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BulkFollow() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkFollow(::grpc::ServerContext* context, ::sonet::follow::v1::BulkFollowRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::BulkFollowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkUnfollow(::grpc::ServerContext* context, ::sonet::follow::v1::BulkFollowRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::BulkFollowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecommendations(::grpc::ServerContext* context, ::sonet::follow::v1::GetRecommendationsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetRecommendationsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrendingUsers(::grpc::ServerContext* context, ::sonet::follow::v1::GetTrendingUsersRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetTrendingUsersResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowerAnalytics(::grpc::ServerContext* context, ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetFollowerAnalyticsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSocialMetrics(::grpc::ServerContext* context, ::sonet::follow::v1::GetSocialMetricsRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetSocialMetricsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLiveFollowerCount(::grpc::ServerContext* context, ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetLiveFollowerCountResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecentActivity(::grpc::ServerContext* context, ::sonet::follow::v1::GetRecentActivityRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::GetRecentActivityResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamFollowerUpdates(::grpc::ServerContext* context, ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::grpc::ServerAsyncWriter< ::sonet::follow::v1::FollowActivity>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateFollow(::grpc::ServerContext* context, ::sonet::follow::v1::ValidateFollowRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::ValidateFollowResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckRateLimit(::grpc::ServerContext* context, ::sonet::follow::v1::CheckRateLimitRequest* request, ::grpc::ServerAsyncResponseWriter< ::sonet::follow::v1::CheckRateLimitResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_FollowUser<WithAsyncMethod_UnfollowUser<WithAsyncMethod_BlockUser<WithAsyncMethod_UnblockUser<WithAsyncMethod_MuteUser<WithAsyncMethod_UnmuteUser<WithAsyncMethod_GetRelationship<WithAsyncMethod_CheckRelationship<WithAsyncMethod_GetBulkRelationships<WithAsyncMethod_GetFollowers<WithAsyncMethod_GetFollowing<WithAsyncMethod_GetMutualFriends<WithAsyncMethod_BulkFollow<WithAsyncMethod_BulkUnfollow<WithAsyncMethod_GetRecommendations<WithAsyncMethod_GetTrendingUsers<WithAsyncMethod_GetFollowerAnalytics<WithAsyncMethod_GetSocialMetrics<WithAsyncMethod_GetLiveFollowerCount<WithAsyncMethod_GetRecentActivity<WithAsyncMethod_StreamFollowerUpdates<WithAsyncMethod_ValidateFollow<WithAsyncMethod_CheckRateLimit<Service > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_FollowUser() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::FollowUserRequest, ::sonet::follow::v1::FollowUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::FollowUserRequest* request, ::sonet::follow::v1::FollowUserResponse* response) { return this->FollowUser(context, request, response); }));}
    void SetMessageAllocatorFor_FollowUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::FollowUserRequest, ::sonet::follow::v1::FollowUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::FollowUserRequest, ::sonet::follow::v1::FollowUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FollowUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnfollowUserRequest, ::sonet::follow::v1::UnfollowUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::UnfollowUserRequest* request, ::sonet::follow::v1::UnfollowUserResponse* response) { return this->UnfollowUser(context, request, response); }));}
    void SetMessageAllocatorFor_UnfollowUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::UnfollowUserRequest, ::sonet::follow::v1::UnfollowUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnfollowUserRequest, ::sonet::follow::v1::UnfollowUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnfollowUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BlockUser() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BlockUserRequest, ::sonet::follow::v1::BlockUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::BlockUserRequest* request, ::sonet::follow::v1::BlockUserResponse* response) { return this->BlockUser(context, request, response); }));}
    void SetMessageAllocatorFor_BlockUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::BlockUserRequest, ::sonet::follow::v1::BlockUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BlockUserRequest, ::sonet::follow::v1::BlockUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BlockUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnblockUser() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnblockUserRequest, ::sonet::follow::v1::UnblockUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::UnblockUserRequest* request, ::sonet::follow::v1::UnblockUserResponse* response) { return this->UnblockUser(context, request, response); }));}
    void SetMessageAllocatorFor_UnblockUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::UnblockUserRequest, ::sonet::follow::v1::UnblockUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnblockUserRequest, ::sonet::follow::v1::UnblockUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnblockUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_MuteUser() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::MuteUserRequest, ::sonet::follow::v1::MuteUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::MuteUserRequest* request, ::sonet::follow::v1::MuteUserResponse* response) { return this->MuteUser(context, request, response); }));}
    void SetMessageAllocatorFor_MuteUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::MuteUserRequest, ::sonet::follow::v1::MuteUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::MuteUserRequest, ::sonet::follow::v1::MuteUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MuteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnmuteUserRequest, ::sonet::follow::v1::UnmuteUserResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::UnmuteUserRequest* request, ::sonet::follow::v1::UnmuteUserResponse* response) { return this->UnmuteUser(context, request, response); }));}
    void SetMessageAllocatorFor_UnmuteUser(
        ::grpc::MessageAllocator< ::sonet::follow::v1::UnmuteUserRequest, ::sonet::follow::v1::UnmuteUserResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::UnmuteUserRequest, ::sonet::follow::v1::UnmuteUserResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnmuteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRelationship() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRelationshipRequest, ::sonet::follow::v1::GetRelationshipResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetRelationshipRequest* request, ::sonet::follow::v1::GetRelationshipResponse* response) { return this->GetRelationship(context, request, response); }));}
    void SetMessageAllocatorFor_GetRelationship(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetRelationshipRequest, ::sonet::follow::v1::GetRelationshipResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRelationshipRequest, ::sonet::follow::v1::GetRelationshipResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::CheckRelationshipRequest, ::sonet::follow::v1::CheckRelationshipResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::CheckRelationshipRequest* request, ::sonet::follow::v1::CheckRelationshipResponse* response) { return this->CheckRelationship(context, request, response); }));}
    void SetMessageAllocatorFor_CheckRelationship(
        ::grpc::MessageAllocator< ::sonet::follow::v1::CheckRelationshipRequest, ::sonet::follow::v1::CheckRelationshipResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::CheckRelationshipRequest, ::sonet::follow::v1::CheckRelationshipResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetBulkRelationshipsRequest, ::sonet::follow::v1::GetBulkRelationshipsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetBulkRelationshipsRequest* request, ::sonet::follow::v1::GetBulkRelationshipsResponse* response) { return this->GetBulkRelationships(context, request, response); }));}
    void SetMessageAllocatorFor_GetBulkRelationships(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetBulkRelationshipsRequest, ::sonet::follow::v1::GetBulkRelationshipsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetBulkRelationshipsRequest, ::sonet::follow::v1::GetBulkRelationshipsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBulkRelationships(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFollowers() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowersRequest, ::sonet::follow::v1::GetFollowersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetFollowersRequest* request, ::sonet::follow::v1::GetFollowersResponse* response) { return this->GetFollowers(context, request, response); }));}
    void SetMessageAllocatorFor_GetFollowers(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetFollowersRequest, ::sonet::follow::v1::GetFollowersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowersRequest, ::sonet::follow::v1::GetFollowersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowers(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFollowing() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowingRequest, ::sonet::follow::v1::GetFollowingResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetFollowingRequest* request, ::sonet::follow::v1::GetFollowingResponse* response) { return this->GetFollowing(context, request, response); }));}
    void SetMessageAllocatorFor_GetFollowing(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetFollowingRequest, ::sonet::follow::v1::GetFollowingResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowingRequest, ::sonet::follow::v1::GetFollowingResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowing(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetMutualFriendsRequest, ::sonet::follow::v1::GetMutualFriendsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetMutualFriendsRequest* request, ::sonet::follow::v1::GetMutualFriendsResponse* response) { return this->GetMutualFriends(context, request, response); }));}
    void SetMessageAllocatorFor_GetMutualFriends(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetMutualFriendsRequest, ::sonet::follow::v1::GetMutualFriendsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetMutualFriendsRequest, ::sonet::follow::v1::GetMutualFriendsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMutualFriends(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BulkFollow() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response) { return this->BulkFollow(context, request, response); }));}
    void SetMessageAllocatorFor_BulkFollow(
        ::grpc::MessageAllocator< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BulkFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::BulkFollowRequest* request, ::sonet::follow::v1::BulkFollowResponse* response) { return this->BulkUnfollow(context, request, response); }));}
    void SetMessageAllocatorFor_BulkUnfollow(
        ::grpc::MessageAllocator< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BulkUnfollow(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRecommendationsRequest, ::sonet::follow::v1::GetRecommendationsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetRecommendationsRequest* request, ::sonet::follow::v1::GetRecommendationsResponse* response) { return this->GetRecommendations(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecommendations(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetRecommendationsRequest, ::sonet::follow::v1::GetRecommendationsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRecommendationsRequest, ::sonet::follow::v1::GetRecommendationsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecommendations(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetTrendingUsersRequest, ::sonet::follow::v1::GetTrendingUsersResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetTrendingUsersRequest* request, ::sonet::follow::v1::GetTrendingUsersResponse* response) { return this->GetTrendingUsers(context, request, response); }));}
    void SetMessageAllocatorFor_GetTrendingUsers(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetTrendingUsersRequest, ::sonet::follow::v1::GetTrendingUsersResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetTrendingUsersRequest, ::sonet::follow::v1::GetTrendingUsersResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrendingUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowerAnalyticsRequest, ::sonet::follow::v1::GetFollowerAnalyticsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* request, ::sonet::follow::v1::GetFollowerAnalyticsResponse* response) { return this->GetFollowerAnalytics(context, request, response); }));}
    void SetMessageAllocatorFor_GetFollowerAnalytics(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetFollowerAnalyticsRequest, ::sonet::follow::v1::GetFollowerAnalyticsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetFollowerAnalyticsRequest, ::sonet::follow::v1::GetFollowerAnalyticsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowerAnalytics(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetSocialMetricsRequest, ::sonet::follow::v1::GetSocialMetricsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetSocialMetricsRequest* request, ::sonet::follow::v1::GetSocialMetricsResponse* response) { return this->GetSocialMetrics(context, request, response); }));}
    void SetMessageAllocatorFor_GetSocialMetrics(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetSocialMetricsRequest, ::sonet::follow::v1::GetSocialMetricsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetSocialMetricsRequest, ::sonet::follow::v1::GetSocialMetricsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSocialMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::GetLiveFollowerCountResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request, ::sonet::follow::v1::GetLiveFollowerCountResponse* response) { return this->GetLiveFollowerCount(context, request, response); }));}
    void SetMessageAllocatorFor_GetLiveFollowerCount(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::GetLiveFollowerCountResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::GetLiveFollowerCountResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLiveFollowerCount(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRecentActivityRequest, ::sonet::follow::v1::GetRecentActivityResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetRecentActivityRequest* request, ::sonet::follow::v1::GetRecentActivityResponse* response) { return this->GetRecentActivity(context, request, response); }));}
    void SetMessageAllocatorFor_GetRecentActivity(
        ::grpc::MessageAllocator< ::sonet::follow::v1::GetRecentActivityRequest, ::sonet::follow::v1::GetRecentActivityResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::GetRecentActivityRequest, ::sonet::follow::v1::GetRecentActivityResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecentActivity(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::FollowActivity>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::GetLiveFollowerCountRequest* request) { return this->StreamFollowerUpdates(context, request); }));
    }
    ~WithCallbackMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::sonet::follow::v1::FollowActivity>* StreamFollowerUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::ValidateFollowRequest, ::sonet::follow::v1::ValidateFollowResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::ValidateFollowRequest* request, ::sonet::follow::v1::ValidateFollowResponse* response) { return this->ValidateFollow(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateFollow(
        ::grpc::MessageAllocator< ::sonet::follow::v1::ValidateFollowRequest, ::sonet::follow::v1::ValidateFollowResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::ValidateFollowRequest, ::sonet::follow::v1::ValidateFollowResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::CheckRateLimitRequest, ::sonet::follow::v1::CheckRateLimitResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::sonet::follow::v1::CheckRateLimitRequest* request, ::sonet::follow::v1::CheckRateLimitResponse* response) { return this->CheckRateLimit(context, request, response); }));}
    void SetMessageAllocatorFor_CheckRateLimit(
        ::grpc::MessageAllocator< ::sonet::follow::v1::CheckRateLimitRequest, ::sonet::follow::v1::CheckRateLimitResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::sonet::follow::v1::CheckRateLimitRequest, ::sonet::follow::v1::CheckRateLimitResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckRateLimit(
      ::grpc::CallbackServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_FollowUser<WithCallbackMethod_UnfollowUser<WithCallbackMethod_BlockUser<WithCallbackMethod_UnblockUser<WithCallbackMethod_MuteUser<WithCallbackMethod_UnmuteUser<WithCallbackMethod_GetRelationship<WithCallbackMethod_CheckRelationship<WithCallbackMethod_GetBulkRelationships<WithCallbackMethod_GetFollowers<WithCallbackMethod_GetFollowing<WithCallbackMethod_GetMutualFriends<WithCallbackMethod_BulkFollow<WithCallbackMethod_BulkUnfollow<WithCallbackMethod_GetRecommendations<WithCallbackMethod_GetTrendingUsers<WithCallbackMethod_GetFollowerAnalytics<WithCallbackMethod_GetSocialMetrics<WithCallbackMethod_GetLiveFollowerCount<WithCallbackMethod_GetRecentActivity<WithCallbackMethod_StreamFollowerUpdates<WithCallbackMethod_ValidateFollow<WithCallbackMethod_CheckRateLimit<Service > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_FollowUser() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BlockUser() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnblockUser() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_MuteUser() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRelationship() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFollowers() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFollowing() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BulkFollow() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_FollowUser() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestFollowUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnfollowUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BlockUser() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBlockUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnblockUser() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnblockUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_MuteUser() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMuteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnmuteUser(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRelationship() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRelationship(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckRelationship(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetBulkRelationships(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFollowers() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFollowing() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowing(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMutualFriends(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BulkFollow() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkFollow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBulkUnfollow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecommendations(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrendingUsers(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetFollowerAnalytics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSocialMetrics(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetLiveFollowerCount(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRecentActivity(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestStreamFollowerUpdates(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(20, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateFollow(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckRateLimit(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_FollowUser() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->FollowUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* FollowUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnfollowUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnfollowUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BlockUser() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BlockUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BlockUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnblockUser() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnblockUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnblockUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_MuteUser() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->MuteUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* MuteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UnmuteUser(context, request, response); }));
    }
    ~WithRawCallbackMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UnmuteUser(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRelationship() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRelationship(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckRelationship(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckRelationship(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetBulkRelationships(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetBulkRelationships(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFollowers() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFollowers(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFollowing() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFollowing(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowing(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetMutualFriends(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetMutualFriends(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BulkFollow() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BulkFollow(context, request, response); }));
    }
    ~WithRawCallbackMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BulkFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->BulkUnfollow(context, request, response); }));
    }
    ~WithRawCallbackMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* BulkUnfollow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecommendations(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecommendations(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTrendingUsers(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrendingUsers(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetFollowerAnalytics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetFollowerAnalytics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSocialMetrics(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSocialMetrics(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetLiveFollowerCount(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetLiveFollowerCount(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetRecentActivity(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetRecentActivity(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->StreamFollowerUpdates(context, request); }));
    }
    ~WithRawCallbackMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* StreamFollowerUpdates(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateFollow(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateFollow(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CheckRateLimit(context, request, response); }));
    }
    ~WithRawCallbackMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CheckRateLimit(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_FollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_FollowUser() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::FollowUserRequest, ::sonet::follow::v1::FollowUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::FollowUserRequest, ::sonet::follow::v1::FollowUserResponse>* streamer) {
                       return this->StreamedFollowUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_FollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status FollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::FollowUserRequest* /*request*/, ::sonet::follow::v1::FollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedFollowUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::FollowUserRequest,::sonet::follow::v1::FollowUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnfollowUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnfollowUser() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::UnfollowUserRequest, ::sonet::follow::v1::UnfollowUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::UnfollowUserRequest, ::sonet::follow::v1::UnfollowUserResponse>* streamer) {
                       return this->StreamedUnfollowUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnfollowUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnfollowUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnfollowUserRequest* /*request*/, ::sonet::follow::v1::UnfollowUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnfollowUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::UnfollowUserRequest,::sonet::follow::v1::UnfollowUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BlockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BlockUser() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::BlockUserRequest, ::sonet::follow::v1::BlockUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::BlockUserRequest, ::sonet::follow::v1::BlockUserResponse>* streamer) {
                       return this->StreamedBlockUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BlockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BlockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BlockUserRequest* /*request*/, ::sonet::follow::v1::BlockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBlockUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::BlockUserRequest,::sonet::follow::v1::BlockUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnblockUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnblockUser() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::UnblockUserRequest, ::sonet::follow::v1::UnblockUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::UnblockUserRequest, ::sonet::follow::v1::UnblockUserResponse>* streamer) {
                       return this->StreamedUnblockUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnblockUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnblockUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnblockUserRequest* /*request*/, ::sonet::follow::v1::UnblockUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnblockUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::UnblockUserRequest,::sonet::follow::v1::UnblockUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_MuteUser() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::MuteUserRequest, ::sonet::follow::v1::MuteUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::MuteUserRequest, ::sonet::follow::v1::MuteUserResponse>* streamer) {
                       return this->StreamedMuteUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_MuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::MuteUserRequest* /*request*/, ::sonet::follow::v1::MuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMuteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::MuteUserRequest,::sonet::follow::v1::MuteUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnmuteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UnmuteUser() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::UnmuteUserRequest, ::sonet::follow::v1::UnmuteUserResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::UnmuteUserRequest, ::sonet::follow::v1::UnmuteUserResponse>* streamer) {
                       return this->StreamedUnmuteUser(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UnmuteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnmuteUser(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::UnmuteUserRequest* /*request*/, ::sonet::follow::v1::UnmuteUserResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnmuteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::UnmuteUserRequest,::sonet::follow::v1::UnmuteUserResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRelationship() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetRelationshipRequest, ::sonet::follow::v1::GetRelationshipResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetRelationshipRequest, ::sonet::follow::v1::GetRelationshipResponse>* streamer) {
                       return this->StreamedGetRelationship(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRelationshipRequest* /*request*/, ::sonet::follow::v1::GetRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRelationship(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetRelationshipRequest,::sonet::follow::v1::GetRelationshipResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckRelationship : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckRelationship() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::CheckRelationshipRequest, ::sonet::follow::v1::CheckRelationshipResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::CheckRelationshipRequest, ::sonet::follow::v1::CheckRelationshipResponse>* streamer) {
                       return this->StreamedCheckRelationship(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckRelationship() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckRelationship(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRelationshipRequest* /*request*/, ::sonet::follow::v1::CheckRelationshipResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckRelationship(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::CheckRelationshipRequest,::sonet::follow::v1::CheckRelationshipResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetBulkRelationships : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetBulkRelationships() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetBulkRelationshipsRequest, ::sonet::follow::v1::GetBulkRelationshipsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetBulkRelationshipsRequest, ::sonet::follow::v1::GetBulkRelationshipsResponse>* streamer) {
                       return this->StreamedGetBulkRelationships(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetBulkRelationships() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetBulkRelationships(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetBulkRelationshipsRequest* /*request*/, ::sonet::follow::v1::GetBulkRelationshipsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetBulkRelationships(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetBulkRelationshipsRequest,::sonet::follow::v1::GetBulkRelationshipsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFollowers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFollowers() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetFollowersRequest, ::sonet::follow::v1::GetFollowersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetFollowersRequest, ::sonet::follow::v1::GetFollowersResponse>* streamer) {
                       return this->StreamedGetFollowers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFollowers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFollowers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowersRequest* /*request*/, ::sonet::follow::v1::GetFollowersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFollowers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetFollowersRequest,::sonet::follow::v1::GetFollowersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFollowing : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFollowing() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetFollowingRequest, ::sonet::follow::v1::GetFollowingResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetFollowingRequest, ::sonet::follow::v1::GetFollowingResponse>* streamer) {
                       return this->StreamedGetFollowing(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFollowing() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFollowing(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowingRequest* /*request*/, ::sonet::follow::v1::GetFollowingResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFollowing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetFollowingRequest,::sonet::follow::v1::GetFollowingResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMutualFriends : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetMutualFriends() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetMutualFriendsRequest, ::sonet::follow::v1::GetMutualFriendsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetMutualFriendsRequest, ::sonet::follow::v1::GetMutualFriendsResponse>* streamer) {
                       return this->StreamedGetMutualFriends(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetMutualFriends() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMutualFriends(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetMutualFriendsRequest* /*request*/, ::sonet::follow::v1::GetMutualFriendsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMutualFriends(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetMutualFriendsRequest,::sonet::follow::v1::GetMutualFriendsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BulkFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BulkFollow() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>* streamer) {
                       return this->StreamedBulkFollow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BulkFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BulkFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBulkFollow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::BulkFollowRequest,::sonet::follow::v1::BulkFollowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BulkUnfollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_BulkUnfollow() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::BulkFollowRequest, ::sonet::follow::v1::BulkFollowResponse>* streamer) {
                       return this->StreamedBulkUnfollow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_BulkUnfollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BulkUnfollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::BulkFollowRequest* /*request*/, ::sonet::follow::v1::BulkFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBulkUnfollow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::BulkFollowRequest,::sonet::follow::v1::BulkFollowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecommendations : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecommendations() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetRecommendationsRequest, ::sonet::follow::v1::GetRecommendationsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetRecommendationsRequest, ::sonet::follow::v1::GetRecommendationsResponse>* streamer) {
                       return this->StreamedGetRecommendations(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecommendations() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecommendations(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecommendationsRequest* /*request*/, ::sonet::follow::v1::GetRecommendationsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecommendations(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetRecommendationsRequest,::sonet::follow::v1::GetRecommendationsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTrendingUsers : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTrendingUsers() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetTrendingUsersRequest, ::sonet::follow::v1::GetTrendingUsersResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetTrendingUsersRequest, ::sonet::follow::v1::GetTrendingUsersResponse>* streamer) {
                       return this->StreamedGetTrendingUsers(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTrendingUsers() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTrendingUsers(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetTrendingUsersRequest* /*request*/, ::sonet::follow::v1::GetTrendingUsersResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTrendingUsers(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetTrendingUsersRequest,::sonet::follow::v1::GetTrendingUsersResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetFollowerAnalytics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetFollowerAnalytics() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetFollowerAnalyticsRequest, ::sonet::follow::v1::GetFollowerAnalyticsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetFollowerAnalyticsRequest, ::sonet::follow::v1::GetFollowerAnalyticsResponse>* streamer) {
                       return this->StreamedGetFollowerAnalytics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetFollowerAnalytics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetFollowerAnalytics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetFollowerAnalyticsRequest* /*request*/, ::sonet::follow::v1::GetFollowerAnalyticsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetFollowerAnalytics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetFollowerAnalyticsRequest,::sonet::follow::v1::GetFollowerAnalyticsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSocialMetrics : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSocialMetrics() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetSocialMetricsRequest, ::sonet::follow::v1::GetSocialMetricsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetSocialMetricsRequest, ::sonet::follow::v1::GetSocialMetricsResponse>* streamer) {
                       return this->StreamedGetSocialMetrics(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSocialMetrics() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSocialMetrics(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetSocialMetricsRequest* /*request*/, ::sonet::follow::v1::GetSocialMetricsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSocialMetrics(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetSocialMetricsRequest,::sonet::follow::v1::GetSocialMetricsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetLiveFollowerCount : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetLiveFollowerCount() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::GetLiveFollowerCountResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::GetLiveFollowerCountResponse>* streamer) {
                       return this->StreamedGetLiveFollowerCount(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetLiveFollowerCount() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetLiveFollowerCount(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::sonet::follow::v1::GetLiveFollowerCountResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetLiveFollowerCount(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetLiveFollowerCountRequest,::sonet::follow::v1::GetLiveFollowerCountResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRecentActivity : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetRecentActivity() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::GetRecentActivityRequest, ::sonet::follow::v1::GetRecentActivityResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::GetRecentActivityRequest, ::sonet::follow::v1::GetRecentActivityResponse>* streamer) {
                       return this->StreamedGetRecentActivity(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetRecentActivity() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRecentActivity(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetRecentActivityRequest* /*request*/, ::sonet::follow::v1::GetRecentActivityResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRecentActivity(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::GetRecentActivityRequest,::sonet::follow::v1::GetRecentActivityResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateFollow : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateFollow() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::ValidateFollowRequest, ::sonet::follow::v1::ValidateFollowResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::ValidateFollowRequest, ::sonet::follow::v1::ValidateFollowResponse>* streamer) {
                       return this->StreamedValidateFollow(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateFollow() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateFollow(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::ValidateFollowRequest* /*request*/, ::sonet::follow::v1::ValidateFollowResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateFollow(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::ValidateFollowRequest,::sonet::follow::v1::ValidateFollowResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckRateLimit : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CheckRateLimit() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::sonet::follow::v1::CheckRateLimitRequest, ::sonet::follow::v1::CheckRateLimitResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::sonet::follow::v1::CheckRateLimitRequest, ::sonet::follow::v1::CheckRateLimitResponse>* streamer) {
                       return this->StreamedCheckRateLimit(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CheckRateLimit() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckRateLimit(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::CheckRateLimitRequest* /*request*/, ::sonet::follow::v1::CheckRateLimitResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckRateLimit(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::sonet::follow::v1::CheckRateLimitRequest,::sonet::follow::v1::CheckRateLimitResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_FollowUser<WithStreamedUnaryMethod_UnfollowUser<WithStreamedUnaryMethod_BlockUser<WithStreamedUnaryMethod_UnblockUser<WithStreamedUnaryMethod_MuteUser<WithStreamedUnaryMethod_UnmuteUser<WithStreamedUnaryMethod_GetRelationship<WithStreamedUnaryMethod_CheckRelationship<WithStreamedUnaryMethod_GetBulkRelationships<WithStreamedUnaryMethod_GetFollowers<WithStreamedUnaryMethod_GetFollowing<WithStreamedUnaryMethod_GetMutualFriends<WithStreamedUnaryMethod_BulkFollow<WithStreamedUnaryMethod_BulkUnfollow<WithStreamedUnaryMethod_GetRecommendations<WithStreamedUnaryMethod_GetTrendingUsers<WithStreamedUnaryMethod_GetFollowerAnalytics<WithStreamedUnaryMethod_GetSocialMetrics<WithStreamedUnaryMethod_GetLiveFollowerCount<WithStreamedUnaryMethod_GetRecentActivity<WithStreamedUnaryMethod_ValidateFollow<WithStreamedUnaryMethod_CheckRateLimit<Service > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_StreamFollowerUpdates : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_StreamFollowerUpdates() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::FollowActivity>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::sonet::follow::v1::GetLiveFollowerCountRequest, ::sonet::follow::v1::FollowActivity>* streamer) {
                       return this->StreamedStreamFollowerUpdates(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_StreamFollowerUpdates() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status StreamFollowerUpdates(::grpc::ServerContext* /*context*/, const ::sonet::follow::v1::GetLiveFollowerCountRequest* /*request*/, ::grpc::ServerWriter< ::sonet::follow::v1::FollowActivity>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedStreamFollowerUpdates(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::sonet::follow::v1::GetLiveFollowerCountRequest,::sonet::follow::v1::FollowActivity>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_StreamFollowerUpdates<Service > SplitStreamedService;
  typedef WithStreamedUnaryMethod_FollowUser<WithStreamedUnaryMethod_UnfollowUser<WithStreamedUnaryMethod_BlockUser<WithStreamedUnaryMethod_UnblockUser<WithStreamedUnaryMethod_MuteUser<WithStreamedUnaryMethod_UnmuteUser<WithStreamedUnaryMethod_GetRelationship<WithStreamedUnaryMethod_CheckRelationship<WithStreamedUnaryMethod_GetBulkRelationships<WithStreamedUnaryMethod_GetFollowers<WithStreamedUnaryMethod_GetFollowing<WithStreamedUnaryMethod_GetMutualFriends<WithStreamedUnaryMethod_BulkFollow<WithStreamedUnaryMethod_BulkUnfollow<WithStreamedUnaryMethod_GetRecommendations<WithStreamedUnaryMethod_GetTrendingUsers<WithStreamedUnaryMethod_GetFollowerAnalytics<WithStreamedUnaryMethod_GetSocialMetrics<WithStreamedUnaryMethod_GetLiveFollowerCount<WithStreamedUnaryMethod_GetRecentActivity<WithSplitStreamingMethod_StreamFollowerUpdates<WithStreamedUnaryMethod_ValidateFollow<WithStreamedUnaryMethod_CheckRateLimit<Service > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};
// ========== CORE OPERATIONS ==========

}  // namespace v1
}  // namespace follow
}  // namespace sonet


#endif  // GRPC_proto_2ffollow_5fservice_2eproto__INCLUDED
