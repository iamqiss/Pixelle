// sub-path assignment is not supported yet, solved in https://trello.com/c/79yDFWJh
Feature "QuantifiedPathPatternAcceptance": Scenario "Path and subpath variables"

// Horizontal aggregations are currently not supported. Solved in https://trello.com/c/hO4INisk/
Feature "QuantifiedPathPatternAcceptance": Scenario "Referencing previously-bound, non-local unconditional singleton"
Feature "QuantifiedPathPatternAcceptance": Scenario "Referencing non-local unconditional singletons within the same path pattern containing the quantified path pattern"
Feature "QuantifiedPathPatternAcceptance": Scenario "Using an unconditional singleton together with a group variable to formulate an expression as input to an aggregating operation"
Feature "QuantifiedPathPatternAcceptance": Scenario "Using an multiple unconditional singletons together with a group variable to formulate an expression as input to an aggregating operation"
Feature "QuantifiedPathPatternAcceptance": Scenario "Multiple references to the same group variable within an aggregating operation"
Feature "QuantifiedPathPatternAcceptance": Scenario "Multiple aggregating operations"

// Leaving out nodes is currently not supported. Will be handled in https://trello.com/c/rcFdSCvc/
Feature "QuantifiedPathPatternAcceptance": Scenario "Leaving out the nodes adjacent to a QPP"

// Uses enterprise procedure
Feature "CollectExpressionAcceptance": Scenario "COLLECT with updating procedure and yield should fail"

// Var-length relationship with inline predicate not currently supported, will be solved by https://trello.com/c/oYWxieEi
Feature "GpmSyntaxMixingAcceptance": Scenario "Var-length relationship with inline predicate - OK"

// Var-length relationship with GPM relationship type expression not currently supported, will be solved by https://trello.com/c/rNUq8FF3
Feature "GpmSyntaxMixingAcceptance": Scenario "Var-length relationship with GPM relationship type expression - OK"

// Explicit match modes are not currently supported
Feature "GpmSyntaxMixingAcceptance": Scenario "REPEATABLE ELEMENTS with QPP - OK"
Feature "GpmSyntaxMixingAcceptance": Scenario "REPEATABLE ELEMENTS with shortestPath in different statements - OK"
Feature "GpmSyntaxMixingAcceptance": Scenario "REPEATABLE ELEMENTS with var-length relationship - OK"
Feature "GpmSyntaxMixingAcceptance": Scenario "DIFFERENT NODES with var-length relationship - OK"
Feature "GpmSyntaxMixingAcceptance": Scenario "Mixing GPM and non-GPM of unrelated features within a subquery - OK": Example "4"
Feature "GpmSyntaxMixingAcceptance": Scenario "Mixing GPM and non-GPM of unrelated features within a subquery - OK": Example "10"
Feature "GpmSyntaxMixingAcceptance": Scenario "Mixing GPM and non-GPM of unrelated features within a subquery - OK": Example "17"
Feature "GpmSyntaxMixingAcceptance": Scenario "Mixing GPM and non-GPM of unrelated features within a subquery - OK": Example "26"

// Some syntax mixing rules are not correct for sub-queries.
// Ignored since changing this would break backwards compatibility.
// See the "GPM Sync Rolling Agenda" notes for Nov 23, 2023
Feature "GpmSyntaxMixingAcceptance": Scenario "Conflicting syntax in separate statements in same EXISTS sub-query - syntax error": Example "4"
Feature "GpmSyntaxMixingAcceptance": Scenario "Conflicting syntax in separate statements in same COUNT sub-query - syntax error": Example "4"
Feature "GpmSyntaxMixingAcceptance": Scenario "Conflicting syntax in separate statements within a CALL subquery - syntax error": Example "6"
Feature "GpmSyntaxMixingAcceptance": Scenario "Conflicting syntax in separate statements within a CALL subquery - syntax error": Example "9"

// Legacy behaves differently because it didn't receive the bugfix from PR #27330
Feature "CallInTransactionsErrorHandlingWithReturn": Scenario "Create and return aliased imported node in transactions ON ERROR CONTINUE"
Feature "CallInTransactionsErrorHandlingWithReturn": Scenario "Create and return aliased imported node in concurrent transactions ON ERROR CONTINUE"
Feature "CallInTransactionsErrorHandlingWithReturn": Scenario "Create and return aliased imported variable in transactions ON ERROR CONTINUE"
Feature "CallInTransactionsErrorHandlingWithReturn": Scenario "Create and return aliased imported variable in concurrent transactions ON ERROR CONTINUE"