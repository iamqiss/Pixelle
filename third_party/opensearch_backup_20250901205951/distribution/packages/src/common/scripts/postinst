#
# This script is executed in the post-installation phase
#
#   On Debian,
#       $1=configure : is set to 'configure' and if $2 is set, it is an upgrade
#
#   On RedHat,
#       $1=0         : indicates a removal
#       $1=1         : indicates an upgrade

# source the default env file
if [ -f "${path.env}" ]; then
    . "${path.env}"
fi

export DENSITY_PATH_CONF=${DENSITY_PATH_CONF:-${path.conf}}

IS_UPGRADE=false

case "$1" in

    # Debian ####################################################
    configure)

        # If $1=configure and $2 is set, this is an upgrade
        if [ -n $2 ]; then
            IS_UPGRADE=true
        fi
        PACKAGE=deb
    ;;
    abort-upgrade|abort-remove|abort-deconfigure)
        PACKAGE=deb
    ;;

    # RedHat ####################################################
    1)
        # If $1=1 this is an install
        IS_UPGRADE=false
        PACKAGE=rpm
    ;;
    2)
        # If $1=1 this is an upgrade
        IS_UPGRADE=true
        PACKAGE=rpm
    ;;

    *)
        echo "post install script called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# to pick up /usr/lib/sysctl.d/density.conf
if command -v systemctl > /dev/null; then
    systemctl restart systemd-sysctl.service || true
fi

if [ "x$IS_UPGRADE" != "xtrue" ]; then
    if command -v systemctl >/dev/null; then
        echo "### NOT starting on installation, please execute the following statements to configure density service to start automatically using systemd"
        echo " sudo systemctl daemon-reload"
        echo " sudo systemctl enable density.service"
        echo "### You can start density service by executing"
        echo " sudo systemctl start density.service"

    elif command -v chkconfig >/dev/null; then
        echo "### NOT starting on installation, please execute the following statements to configure density service to start automatically using chkconfig"
        echo " sudo chkconfig --add density"
        echo "### You can start density service by executing"
        echo " sudo service density start"

    elif command -v update-rc.d >/dev/null; then
        echo "### NOT starting on installation, please execute the following statements to configure density service to start automatically using chkconfig"
        echo " sudo update-rc.d density defaults 95 10"
        echo "### You can start density service by executing"
        echo " sudo /etc/init.d/density start"
    fi
elif [ "$RESTART_ON_UPGRADE" = "true" ]; then

    echo -n "Restarting density service..."
    if command -v systemctl >/dev/null; then
        systemctl daemon-reload
        systemctl restart density.service || true

    elif [ -x /etc/init.d/density ]; then
        if command -v invoke-rc.d >/dev/null; then
            invoke-rc.d density stop || true
            invoke-rc.d density start || true
        else
            /etc/init.d/density restart || true
        fi

    # older suse linux distributions do not ship with systemd
    # but do not have an /etc/init.d/ directory
    # this tries to start the density service on these
    # as well without failing this script
    elif [ -x /etc/rc.d/init.d/density ] ; then
        /etc/rc.d/init.d/density restart || true
    fi
    echo " OK"
fi

# the equivalent code for rpm is in posttrans
if [ "$PACKAGE" = "deb" ]; then
    if [ ! -f "${DENSITY_PATH_CONF}"/density.keystore ]; then
        /usr/share/density/bin/density-keystore create
        chown root:density "${DENSITY_PATH_CONF}"/density.keystore
        chmod 660 "${DENSITY_PATH_CONF}"/density.keystore
        md5sum "${DENSITY_PATH_CONF}"/density.keystore > "${DENSITY_PATH_CONF}"/.density.keystore.initial_md5sum
    else
        if /usr/share/density/bin/density-keystore has-passwd --silent ; then
          echo "### Warning: unable to upgrade encrypted keystore" 1>&2
          echo " Please run density-keystore upgrade and enter password" 1>&2
        else
          /usr/share/density/bin/density-keystore upgrade
        fi
    fi
fi

${scripts.footer}
