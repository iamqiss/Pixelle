# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

# TODO(hubcio): Currently, C# tests don't need server. They use testcontainers with 'edge' image.
#               We should change this to use server-start/stop action, so that code from PR is tested.

name: csharp-dotnet-pre-merge
description: .NET pre-merge testing github iggy actions

inputs:
  task:
    description: "Task to run (lint, test, build, e2e)"
    required: true

runs:
  using: "composite"
  steps:
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: "8.0.x"

    - name: Setup Rust with cache
      if: inputs.task == 'test' || inputs.task == 'e2e'
      uses: ./.github/actions/utils/setup-rust-with-cache
      with:
        cache-targets: false  # Only cache registry and git deps, not target dir (sccache handles that)

    - name: Install netcat
      if: inputs.task == 'e2e'
      run: sudo apt-get update && sudo apt-get install -y netcat-openbsd
      shell: bash

    - name: Restore dependencies
      run: |
        cd foreign/csharp
        dotnet restore
      shell: bash

    - name: Build
      if: inputs.task == 'test' || inputs.task == 'build' || inputs.task == 'lint'
      run: |
        cd foreign/csharp
        dotnet build --no-restore
      shell: bash

    - name: Lint (Code Analysis)
      if: inputs.task == 'lint'
      run: |
        cd foreign/csharp

        # Run code analysis
        dotnet build --no-restore /p:EnforceCodeStyleInBuild=true /p:TreatWarningsAsErrors=false

        # TODO: make format check blocking (requires dotnet-format tool)
        dotnet format --verify-no-changes --verbosity diagnostic || true

      shell: bash

    - name: Test
      if: inputs.task == 'test'
      run: |
        cd foreign/csharp

        # Run unit tests
        dotnet test Iggy_SDK_Tests --no-build --verbosity normal

        # Run integration tests
        dotnet test Iggy_SDK.Tests.Integration --no-build --verbosity normal

      shell: bash

    # TODO(hubcio): currently, C# tests don't need server. They use testcontainers with 'edge' image.
    # instead, they should use server-start/stop action to test the actual code from PR.
    # - name: Start Iggy server
    #   id: iggy
    #   if: inputs.task == 'e2e'
    #   uses: ./.github/actions/utils/server-start
    #   with:
    #     mode: cargo
    #     cargo-bin: iggy-server
    #     port: 8090

    - name: Run integration tests
      if: inputs.task == 'e2e'
      run: |
        cd foreign/csharp
        dotnet test Iggy_SDK.Tests.Integration --no-build --verbosity normal
      shell: bash

    - name: Stop Iggy server
      if: inputs.task == 'e2e'
      uses: ./.github/actions/utils/server-stop
      with:
        pid-file: ${{ steps.iggy.outputs.pid_file }}
        log-file: ${{ steps.iggy.outputs.log_file }}

    - name: Build Release
      if: inputs.task == 'build'
      run: |
        cd foreign/csharp

        # Build in Release mode
        dotnet build -c Release --no-restore

        # List build output
        echo "Build output:"
        find . -name "*.dll" -path "*/bin/Release/*" | head -20 || echo "No DLLs found in Release folders"
      shell: bash
